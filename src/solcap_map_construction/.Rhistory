load("~/repos/Autopolyploid_Linkage/src/simulation3/RData/res_nsim:10_nmrk:1000_prob:0.4-0.4-0.1-0.1_LODs:5.RData")
load("~/repos/Autopolyploid_Linkage/src/simulation3/reestimate_with_globar_error/RData/globerr__nsim:10_nmrk:1000_prob:0.4-0.4-0.1-0.1_LODs:5.RData)
load("~/repos/Autopolyploid_Linkage/src/simulation3/RData/res_nsim:10_nmrk:1000_prob:0.4-0.4-0.1-0.1_LODs:5.RData")
load("~/repos/Autopolyploid_Linkage/src/simulation3/reestimate_with_globar_error/RData/globerr__nsim:10_nmrk:1000_prob:0.4-0.4-0.1-0.1_LODs:5.RData")
map.globerr
res.mp$res.mds
require(mappoly)
pdf(file = "~/repos/Autopolyploid_Linkage/src/simulation3/map_example", width = 8.5, height = 10)
plot(res.mp$res.mds, col.cte = "#e41a1c")
plot(map.globerr, col.cte = "#377eb8")
plot(res.mp$res.orig, col.cte = "#4daf4a")
dev.off()
extract_maps<-function(x, dat)
{
w<-round(cumsum(c(0,imf_h(x$maps[[1]]$seq.rf))),1)
names(w)<-dat$mrk.names[x$maps[[1]]$seq.num]
w
}
draw_one_map <- function(x, i, horiz = FALSE, col = 1)
{
if(horiz)
{
for(j in 1:length(x))
lines(x = c(x[j], x[j]), y = c(i-0.25, i+0.25), lwd = .1)
lines(x = c(x[1],rev(x)[1]), y = c(i+0.25, i+0.25), lwd = .2)
lines(x = c(x[1],rev(x)[1]), y = c(i-0.25, i-0.25), lwd = .2)
text(x = x[1] - 50, y = i, labels = length(x), cex = .5, srt = 90, col = col)
} else {
x <- -x
for(j in 1:length(x))
lines(y = c(x[j], x[j]), x = c(i-0.25, i+0.25), lwd = .1, col = col)
lines(y = c(x[1],rev(x)[1]), x = c(i+0.25, i+0.25), lwd = .2)
lines(y = c(x[1],rev(x)[1]), x = c(i-0.25, i-0.25), lwd = .2)
text(y = x[1] + 40, x = i, labels = length(x), cex = .5, srt = 90)
}
}
z <- extract_maps(x = res.mp$res.mds, dat = dat)
plot(1, type = "n", xlim = c(0,500), ylim = c(0,3))
z <- extract_maps(x = res.mp$res.mds, dat = dat)
draw_one_map(z, 1, col = c("#e41a1c", "#377eb8", "#4daf4a", "#984ea3")[j])
draw_one_map(z, 1, col = 1, horiz = TRUE)
plot(1, type = "n", xlim = c(0,500), ylim = c(0,4))
z <- extract_maps(x = res.mp$res.mds, dat = dat)
draw_one_map(z, 3, col = 1, horiz = TRUE)
z <- extract_maps(x = map.globerr, dat = dat)
draw_one_map(z, 2, col = 1, horiz = TRUE)
z <- extract_maps(x = res.mp$res.orig, dat = dat)
draw_one_map(z, 1, col = 1, horiz = TRUE)
plot(1, type = "n", xlim = c(0,500), ylim = c(0,10))
z <- extract_maps(x = res.mp$res.mds, dat = dat)
draw_one_map(z, 9, col = 1, horiz = TRUE)
z <- extract_maps(x = map.globerr, dat = dat)
draw_one_map(z, 6, col = 1, horiz = TRUE)
z <- extract_maps(x = res.mp$res.orig, dat = dat)
draw_one_map(z, 3, col = 1, horiz = TRUE)
locator(1)
locator(1)
for(i in 1:length(z1)){
lines(x = c(z1[i], z2[i]), y = c(8.75, 6.25))
}
plot(1, type = "n", xlim = c(0,500), ylim = c(0,10))
z1 <- extract_maps(x = res.mp$res.mds, dat = dat)
draw_one_map(z1, 9, col = 1, horiz = TRUE)
z2 <- extract_maps(x = map.globerr, dat = dat)
draw_one_map(z2, 6, col = 1, horiz = TRUE)
for(i in 1:length(z1)){
lines(x = c(z1[i], z2[i]), y = c(8.75, 6.25))
}
plot(1, type = "n", xlim = c(0,500), ylim = c(0,10))
z1 <- extract_maps(x = res.mp$res.mds, dat = dat)
draw_one_map(z1, 9, col = 1, horiz = TRUE)
z2 <- extract_maps(x = map.globerr, dat = dat)
draw_one_map(z2, 6, col = 1, horiz = TRUE)
for(i in 1:length(z1)){
lines(x = c(z1[i], z2[i]), y = c(8.75, 6.25), lwd = .1)
}
draw_one_map <- function(x, i, horiz = FALSE, col = 1)
{
if(horiz)
{
for(j in 1:length(x))
lines(x = c(x[j], x[j]), y = c(i-0.25, i+0.25), lwd = .5)
lines(x = c(x[1],rev(x)[1]), y = c(i+0.25, i+0.25), lwd = .75)
lines(x = c(x[1],rev(x)[1]), y = c(i-0.25, i-0.25), lwd = .75)
text(x = x[1] - 50, y = i, labels = length(x), cex = .5, srt = 90, col = col)
} else {
x <- -x
for(j in 1:length(x))
lines(y = c(x[j], x[j]), x = c(i-0.25, i+0.25), lwd = .5, col = col)
lines(y = c(x[1],rev(x)[1]), x = c(i+0.25, i+0.25), lwd = .75)
lines(y = c(x[1],rev(x)[1]), x = c(i-0.25, i-0.25), lwd = .75)
text(y = x[1] + 40, x = i, labels = length(x), cex = .5, srt = 90)
}
}
plot(1, type = "n", xlim = c(0,500), ylim = c(0,10))
z1 <- extract_maps(x = res.mp$res.mds, dat = dat)
draw_one_map(z1, 9, col = 1, horiz = TRUE)
z2 <- extract_maps(x = map.globerr, dat = dat)
draw_one_map(z2, 6, col = 1, horiz = TRUE)
for(i in 1:length(z1)){
lines(x = c(z1[i], z2[i]), y = c(8.75, 6.25), lwd = .1)
}
draw_one_map(z3, 3, col = 1, horiz = TRUE)
z3 <- extract_maps(x = res.mp$res.orig, dat = dat)
draw_one_map(z3, 3, col = 1, horiz = TRUE)
for(i in 1:length(z1)){
lines(x = c(z2[i], z3[i]), y = c(5.75, 3.25), lwd = .1)
}
pdf(file = "~/repos/Autopolyploid_Linkage/src/simulation3/3_map_example.pdf", width = 8.5, height = 10)
plot(1, type = "n", xlim = c(0,500), ylim = c(0,10))
z1 <- extract_maps(x = res.mp$res.mds, dat = dat)
draw_one_map(z1, 9, col = 1, horiz = TRUE)
z2 <- extract_maps(x = map.globerr, dat = dat)
draw_one_map(z2, 6, col = 1, horiz = TRUE)
for(i in 1:length(z1)){
lines(x = c(z1[i], z2[i]), y = c(8.75, 6.25), lwd = .1)
}
z3 <- extract_maps(x = res.mp$res.orig, dat = dat)
draw_one_map(z3, 3, col = 1, horiz = TRUE)
for(i in 1:length(z1)){
lines(x = c(z2[i], z3[i]), y = c(5.75, 3.25), lwd = .1)
}
dev.off()
require(mappoly)
setwd("~/repos/Autopolyploid_Linkage/src/solcap_map_constructiomn/")
#####
solcap.dat<-read_geno_dist(file.in = "~/repos/tutorials/solcap/snp_calling/fitTetra/SolCAP", prob.thres = 0.95)
devtools::install_github("mmollina/mappoly")
require(mappoly)
require(mappoly)
setwd("~/repos/Autopolyploid_Linkage/src/solcap_map_constructiomn/")
#####
solcap.dat<-read_geno_dist(file.in = "~/repos/tutorials/solcap/snp_calling/fitTetra/SolCAP", prob.thres = 0.95)
source("~/repos/Autopolyploid_Linkage/src/simulation_study_3/simulation.R")
source("~/repos/Autopolyploid_Linkage/src/simulation_study_3/build_using_polymapR.R")
source("~/repos/Autopolyploid_Linkage/src/simulation_study_3/build_using_MAPpoly.R")
